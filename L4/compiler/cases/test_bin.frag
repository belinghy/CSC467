/* binary expression test (test 3)*/
{ 
   vec4 temp;

   temp[0] = 0.0; /* blue */
   temp[1] = 0.0;
   temp[2] = 1.0;
   temp[3] = 1.0;

if (!(1.0/2.0 + 3.0 * 4.0 == 1.0/2.0 + 3.0 * 4.0)){

   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

} else if(!(1.0^2.0 + 3.0 ^ 4.0 * 4.0 == 1.0^2.0 + 3.0 ^ 4.0 * 4.0)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

} else if(!(1.0^2.0 + 3.0 ^ 4.0 * 4.0 <= 1.0^2.0 + 3.0 ^ 4.0 * 4.0)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

} else if(!(1.0^2.0 + 3.0 ^ 4.0 * 4.0 >= 1.0^2.0 + 3.0 ^ 4.0 * 4.0)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

} else if(1.0^2.0 + 3.0 ^ 4.0 * 4.0 != 1.0^2.0 + 3.0 ^ 4.0 * 4.0){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

} else if(1.0^2.0 + 3.0 ^ 4.0 * 4.0 < 1.0^2.0 + 3.0 ^ 4.0 * 4.0){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!(1.0^2.0 + 3.0 ^ 4.0 * 4.0 < 1.0^2.0 + 3.0 ^ 4.0 * 4.1)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(1.0^2.0 + 3.0 ^ 4.0 * 4.0 > 1.0^2.0 + 3.0 ^ 4.0 * 4.0){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(1.0^2.0 + 3.0 ^ 4.0 * 4.0 > 1.0^2.0 + 3.0 ^ 4.0 * 4.1){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!(1.0^2.0 + 3.2 ^ 4.0 * 4.0 > 1.0^2.0 + 3.0 ^ 4.0 * 4.0)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!((3.6 > 3.5) && (6 > 3))){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!((3.2 > 3.5) || (6 > 3))){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if((3.2 > 3.5) || (6 < 3)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!(1.0^2.0 + 3.2 ^ 4.0 * 4.0 > 1.0^2.0 + 3.0 ^ 4.0 * 4.0) || !(1.0^2.0 + 3.0 ^ 4.0 * 4.0 <= 1.0^2.0 + 3.0 ^ 4.0 * 4.0)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(!(3.0/4.0/2.0 == 0.75 * 0.5)){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(rsq(2.0) == 1.0/(2.0)^0.5){ /* This fails because of irrational numbers */
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(rsq(2.0) - 1.0/(2.0)^0.5 > 0.0001){
   temp[0] = 1.0; /* red */
   temp[1] = 0.0;
   temp[2] = 0.0;
   temp[3] = 1.0;

}  else if(rsq(4.0^3.0^2.0) == 1.0/(4.0^3.0^2.0)^0.5){ 
   temp[0] = 0.0; /* green */
   temp[1] = 1.0;
   temp[2] = 0.0;
   temp[3] = 1.0;
}

  gl_FragColor = temp;

}