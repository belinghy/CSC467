Grammar

    0 $accept: program $end

    1 program: scope

    2 scope: '{' declarations statements '}'

    3 declarations: declarations declaration
    4             | %empty

    5 statements: statements statement
    6           | %empty

    7 statement: statement_other_than_conditional
    8          | complete_conditional
    9          | incomplete_conditional

   10 complete_conditional: IF '(' expression ')' statement_other_than_conditional ELSE statement
   11                     | IF '(' expression ')' complete_conditional ELSE statement

   12 incomplete_conditional: IF '(' expression ')' statement

   13 statement_other_than_conditional: variable '=' expression ';'
   14                                 | WHILE '(' expression ')' statement
   15                                 | scope
   16                                 | ';'

   17 expression: unary_op expression
   18           | expression AND expression
   19           | expression OR expression
   20           | expression '=' expression
   21           | expression EQ expression
   22           | expression NEQ expression
   23           | expression '<' expression
   24           | expression LEQ expression
   25           | expression '>' expression
   26           | expression GEQ expression
   27           | expression '+' expression
   28           | expression '-' expression
   29           | expression '*' expression
   30           | expression '/' expression
   31           | expression '^' expression
   32           | constructor
   33           | function
   34           | INT_C
   35           | FLOAT_C
   36           | TRUE_C
   37           | FALSE_C
   38           | variable
   39           | '(' expression ')'

   40 variable: ID
   41         | ID '[' INT_C ']'

   42 declaration: type ID ';'
   43            | type ID '=' expression ';'
   44            | CONST type ID '=' expression ';'

   45 constructor: type '(' arguments ')'

   46 function: function_name '(' arguments_opt ')'

   47 arguments_opt: arguments
   48              | %empty

   49 arguments: arguments ',' expression
   50          | expression

   51 type: INT_T
   52     | IVEC_T
   53     | BOOL_T
   54     | BVEC_T
   55     | FLOAT_T
   56     | VEC_T

   57 unary_op: '!'
   58         | '-'

   59 function_name: FUNC


Terminals, with rules where they appear

$end (0) 0
'!' (33) 57
'(' (40) 10 11 12 14 39 45 46
')' (41) 10 11 12 14 39 45 46
'*' (42) 29
'+' (43) 27
',' (44) 49
'-' (45) 28 58
'/' (47) 30
';' (59) 13 16 42 43 44
'<' (60) 23
'=' (61) 13 20 43 44
'>' (62) 25
'[' (91) 41
']' (93) 41
'^' (94) 31
'{' (123) 2
'}' (125) 2
error (256)
FLOAT_T (258) 55
INT_T (259) 51
BOOL_T (260) 53
CONST (261) 44
FALSE_C (262) 37
TRUE_C (263) 36
FUNC (264) 59
IF (265) 10 11 12
WHILE (266) 14
ELSE (267) 10 11
AND (268) 18
OR (269) 19
NEQ (270) 22
EQ (271) 21
LEQ (272) 24
GEQ (273) 26
VEC_T (274) 56
BVEC_T (275) 54
IVEC_T (276) 52
FLOAT_C (277) 35
INT_C (278) 34 41
ID (279) 40 41 42 43 44
UMINUS (280)
STATEMENT (281)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
scope (46)
    on left: 2, on right: 1 15
declarations (47)
    on left: 3 4, on right: 2 3
statements (48)
    on left: 5 6, on right: 2 5
statement (49)
    on left: 7 8 9, on right: 5 10 11 12 14
complete_conditional (50)
    on left: 10 11, on right: 8 11
incomplete_conditional (51)
    on left: 12, on right: 9
statement_other_than_conditional (52)
    on left: 13 14 15 16, on right: 7 10
expression (53)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39, on right: 10 11 12 13 14 17 18 19 20 21 22 23 24
    25 26 27 28 29 30 31 39 43 44 49 50
variable (54)
    on left: 40 41, on right: 13 38
declaration (55)
    on left: 42 43 44, on right: 3
constructor (56)
    on left: 45, on right: 32
function (57)
    on left: 46, on right: 33
arguments_opt (58)
    on left: 47 48, on right: 46
arguments (59)
    on left: 49 50, on right: 45 47 49
type (60)
    on left: 51 52 53 54 55 56, on right: 42 43 44 45
unary_op (61)
    on left: 57 58, on right: 17
function_name (62)
    on left: 59, on right: 46


State 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


State 1

    2 scope: '{' . declarations statements '}'

    $default  reduce using rule 4 (declarations)

    declarations  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: scope .

    $default  reduce using rule 1 (program)


State 4

    2 scope: '{' declarations . statements '}'
    3 declarations: declarations . declaration

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    CONST    shift, and go to state 9
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12

    $default  reduce using rule 6 (statements)

    statements   go to state 13
    declaration  go to state 14
    type         go to state 15


State 5

    0 $accept: program $end .

    $default  accept


State 6

   55 type: FLOAT_T .

    $default  reduce using rule 55 (type)


State 7

   51 type: INT_T .

    $default  reduce using rule 51 (type)


State 8

   53 type: BOOL_T .

    $default  reduce using rule 53 (type)


State 9

   44 declaration: CONST . type ID '=' expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12

    type  go to state 16


State 10

   56 type: VEC_T .

    $default  reduce using rule 56 (type)


State 11

   54 type: BVEC_T .

    $default  reduce using rule 54 (type)


State 12

   52 type: IVEC_T .

    $default  reduce using rule 52 (type)


State 13

    2 scope: '{' declarations statements . '}'
    5 statements: statements . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    '}'    shift, and go to state 20
    ';'    shift, and go to state 21

    scope                             go to state 22
    statement                         go to state 23
    complete_conditional              go to state 24
    incomplete_conditional            go to state 25
    statement_other_than_conditional  go to state 26
    variable                          go to state 27


State 14

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


State 15

   42 declaration: type . ID ';'
   43            | type . ID '=' expression ';'

    ID  shift, and go to state 28


State 16

   44 declaration: CONST type . ID '=' expression ';'

    ID  shift, and go to state 29


State 17

   10 complete_conditional: IF . '(' expression ')' statement_other_than_conditional ELSE statement
   11                     | IF . '(' expression ')' complete_conditional ELSE statement
   12 incomplete_conditional: IF . '(' expression ')' statement

    '('  shift, and go to state 30


State 18

   14 statement_other_than_conditional: WHILE . '(' expression ')' statement

    '('  shift, and go to state 31


State 19

   40 variable: ID .
   41         | ID . '[' INT_C ']'

    '['  shift, and go to state 32

    $default  reduce using rule 40 (variable)


State 20

    2 scope: '{' declarations statements '}' .

    $default  reduce using rule 2 (scope)


State 21

   16 statement_other_than_conditional: ';' .

    $default  reduce using rule 16 (statement_other_than_conditional)


State 22

   15 statement_other_than_conditional: scope .

    $default  reduce using rule 15 (statement_other_than_conditional)


State 23

    5 statements: statements statement .

    $default  reduce using rule 5 (statements)


State 24

    8 statement: complete_conditional .

    $default  reduce using rule 8 (statement)


State 25

    9 statement: incomplete_conditional .

    $default  reduce using rule 9 (statement)


State 26

    7 statement: statement_other_than_conditional .

    $default  reduce using rule 7 (statement)


State 27

   13 statement_other_than_conditional: variable . '=' expression ';'

    '='  shift, and go to state 33


State 28

   42 declaration: type ID . ';'
   43            | type ID . '=' expression ';'

    '='  shift, and go to state 34
    ';'  shift, and go to state 35


State 29

   44 declaration: CONST type ID . '=' expression ';'

    '='  shift, and go to state 36


State 30

   10 complete_conditional: IF '(' . expression ')' statement_other_than_conditional ELSE statement
   11                     | IF '(' . expression ')' complete_conditional ELSE statement
   12 incomplete_conditional: IF '(' . expression ')' statement

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 45
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 31

   14 statement_other_than_conditional: WHILE '(' . expression ')' statement

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 52
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 32

   41 variable: ID '[' . INT_C ']'

    INT_C  shift, and go to state 53


State 33

   13 statement_other_than_conditional: variable '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 54
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 34

   43 declaration: type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 55
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 35

   42 declaration: type ID ';' .

    $default  reduce using rule 42 (declaration)


State 36

   44 declaration: CONST type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 56
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 37

   37 expression: FALSE_C .

    $default  reduce using rule 37 (expression)


State 38

   36 expression: TRUE_C .

    $default  reduce using rule 36 (expression)


State 39

   59 function_name: FUNC .

    $default  reduce using rule 59 (function_name)


State 40

   35 expression: FLOAT_C .

    $default  reduce using rule 35 (expression)


State 41

   34 expression: INT_C .

    $default  reduce using rule 34 (expression)


State 42

   58 unary_op: '-' .

    $default  reduce using rule 58 (unary_op)


State 43

   57 unary_op: '!' .

    $default  reduce using rule 57 (unary_op)


State 44

   39 expression: '(' . expression ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 57
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 45

   10 complete_conditional: IF '(' expression . ')' statement_other_than_conditional ELSE statement
   11                     | IF '(' expression . ')' complete_conditional ELSE statement
   12 incomplete_conditional: IF '(' expression . ')' statement
   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 72


State 46

   38 expression: variable .

    $default  reduce using rule 38 (expression)


State 47

   32 expression: constructor .

    $default  reduce using rule 32 (expression)


State 48

   33 expression: function .

    $default  reduce using rule 33 (expression)


State 49

   45 constructor: type . '(' arguments ')'

    '('  shift, and go to state 73


State 50

   17 expression: unary_op . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 74
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 51

   46 function: function_name . '(' arguments_opt ')'

    '('  shift, and go to state 75


State 52

   14 statement_other_than_conditional: WHILE '(' expression . ')' statement
   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 76


State 53

   41 variable: ID '[' INT_C . ']'

    ']'  shift, and go to state 77


State 54

   13 statement_other_than_conditional: variable '=' expression . ';'
   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ';'  shift, and go to state 78


State 55

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   43 declaration: type ID '=' expression . ';'

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ';'  shift, and go to state 79


State 56

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   44 declaration: CONST type ID '=' expression . ';'

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ';'  shift, and go to state 80


State 57

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   39           | '(' expression . ')'

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 81


State 58

   18 expression: expression AND . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 82
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 59

   19 expression: expression OR . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 83
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 60

   22 expression: expression NEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 84
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 61

   21 expression: expression EQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 85
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 62

   24 expression: expression LEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 86
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 63

   26 expression: expression GEQ . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 87
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 64

   20 expression: expression '=' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 88
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 65

   23 expression: expression '<' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 89
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 66

   25 expression: expression '>' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 90
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 67

   27 expression: expression '+' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 91
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 68

   28 expression: expression '-' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 92
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 69

   29 expression: expression '*' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 93
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 70

   30 expression: expression '/' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 94
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 71

   31 expression: expression '^' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 95
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 72

   10 complete_conditional: IF '(' expression ')' . statement_other_than_conditional ELSE statement
   11                     | IF '(' expression ')' . complete_conditional ELSE statement
   12 incomplete_conditional: IF '(' expression ')' . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope                             go to state 22
    statement                         go to state 96
    complete_conditional              go to state 97
    incomplete_conditional            go to state 25
    statement_other_than_conditional  go to state 98
    variable                          go to state 27


State 73

   45 constructor: type '(' . arguments ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 99
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    arguments      go to state 100
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 74

   17 expression: unary_op expression .
   18           | expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    $default  reduce using rule 17 (expression)


State 75

   46 function: function_name '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    $default  reduce using rule 48 (arguments_opt)

    expression     go to state 99
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    arguments_opt  go to state 101
    arguments      go to state 102
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 76

   14 statement_other_than_conditional: WHILE '(' expression ')' . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope                             go to state 22
    statement                         go to state 103
    complete_conditional              go to state 24
    incomplete_conditional            go to state 25
    statement_other_than_conditional  go to state 26
    variable                          go to state 27


State 77

   41 variable: ID '[' INT_C ']' .

    $default  reduce using rule 41 (variable)


State 78

   13 statement_other_than_conditional: variable '=' expression ';' .

    $default  reduce using rule 13 (statement_other_than_conditional)


State 79

   43 declaration: type ID '=' expression ';' .

    $default  reduce using rule 43 (declaration)


State 80

   44 declaration: CONST type ID '=' expression ';' .

    $default  reduce using rule 44 (declaration)


State 81

   39 expression: '(' expression ')' .

    $default  reduce using rule 39 (expression)


State 82

   18 expression: expression . AND expression
   18           | expression AND expression .
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 18 (expression)


State 83

   18 expression: expression . AND expression
   19           | expression . OR expression
   19           | expression OR expression .
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    AND  shift, and go to state 58
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 19 (expression)


State 84

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   22           | expression NEQ expression .
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 22 (expression)


State 85

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   21           | expression EQ expression .
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 21 (expression)


State 86

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   24           | expression LEQ expression .
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 24 (expression)


State 87

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   26           | expression GEQ expression .
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 26 (expression)


State 88

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   20           | expression '=' expression .
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 20 (expression)


State 89

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   23           | expression '<' expression .
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 23 (expression)


State 90

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   25           | expression '>' expression .
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 25 (expression)


State 91

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   27           | expression '+' expression .
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 27 (expression)


State 92

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   28           | expression '-' expression .
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 28 (expression)


State 93

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   29           | expression '*' expression .
   30           | expression . '/' expression
   31           | expression . '^' expression

    '^'  shift, and go to state 71

    $default  reduce using rule 29 (expression)


State 94

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   30           | expression '/' expression .
   31           | expression . '^' expression

    '^'  shift, and go to state 71

    $default  reduce using rule 30 (expression)


State 95

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   31           | expression '^' expression .

    '^'  shift, and go to state 71

    $default  reduce using rule 31 (expression)


State 96

   12 incomplete_conditional: IF '(' expression ')' statement .

    $default  reduce using rule 12 (incomplete_conditional)


State 97

    8 statement: complete_conditional .
   11 complete_conditional: IF '(' expression ')' complete_conditional . ELSE statement

    ELSE  shift, and go to state 104

    $default  reduce using rule 8 (statement)


State 98

    7 statement: statement_other_than_conditional .
   10 complete_conditional: IF '(' expression ')' statement_other_than_conditional . ELSE statement

    ELSE  shift, and go to state 105

    $default  reduce using rule 7 (statement)


State 99

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   50 arguments: expression .

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 50 (arguments)


State 100

   45 constructor: type '(' arguments . ')'
   49 arguments: arguments . ',' expression

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 101

   46 function: function_name '(' arguments_opt . ')'

    ')'  shift, and go to state 108


State 102

   47 arguments_opt: arguments .
   49 arguments: arguments . ',' expression

    ','  shift, and go to state 107

    $default  reduce using rule 47 (arguments_opt)


State 103

   14 statement_other_than_conditional: WHILE '(' expression ')' statement .

    $default  reduce using rule 14 (statement_other_than_conditional)


State 104

   11 complete_conditional: IF '(' expression ')' complete_conditional ELSE . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope                             go to state 22
    statement                         go to state 109
    complete_conditional              go to state 24
    incomplete_conditional            go to state 25
    statement_other_than_conditional  go to state 26
    variable                          go to state 27


State 105

   10 complete_conditional: IF '(' expression ')' statement_other_than_conditional ELSE . statement

    IF     shift, and go to state 17
    WHILE  shift, and go to state 18
    ID     shift, and go to state 19
    '{'    shift, and go to state 1
    ';'    shift, and go to state 21

    scope                             go to state 22
    statement                         go to state 110
    complete_conditional              go to state 24
    incomplete_conditional            go to state 25
    statement_other_than_conditional  go to state 26
    variable                          go to state 27


State 106

   45 constructor: type '(' arguments ')' .

    $default  reduce using rule 45 (constructor)


State 107

   49 arguments: arguments ',' . expression

    FLOAT_T  shift, and go to state 6
    INT_T    shift, and go to state 7
    BOOL_T   shift, and go to state 8
    FALSE_C  shift, and go to state 37
    TRUE_C   shift, and go to state 38
    FUNC     shift, and go to state 39
    VEC_T    shift, and go to state 10
    BVEC_T   shift, and go to state 11
    IVEC_T   shift, and go to state 12
    FLOAT_C  shift, and go to state 40
    INT_C    shift, and go to state 41
    ID       shift, and go to state 19
    '-'      shift, and go to state 42
    '!'      shift, and go to state 43
    '('      shift, and go to state 44

    expression     go to state 111
    variable       go to state 46
    constructor    go to state 47
    function       go to state 48
    type           go to state 49
    unary_op       go to state 50
    function_name  go to state 51


State 108

   46 function: function_name '(' arguments_opt ')' .

    $default  reduce using rule 46 (function)


State 109

   11 complete_conditional: IF '(' expression ')' complete_conditional ELSE statement .

    $default  reduce using rule 11 (complete_conditional)


State 110

   10 complete_conditional: IF '(' expression ')' statement_other_than_conditional ELSE statement .

    $default  reduce using rule 10 (complete_conditional)


State 111

   18 expression: expression . AND expression
   19           | expression . OR expression
   20           | expression . '=' expression
   21           | expression . EQ expression
   22           | expression . NEQ expression
   23           | expression . '<' expression
   24           | expression . LEQ expression
   25           | expression . '>' expression
   26           | expression . GEQ expression
   27           | expression . '+' expression
   28           | expression . '-' expression
   29           | expression . '*' expression
   30           | expression . '/' expression
   31           | expression . '^' expression
   49 arguments: arguments ',' expression .

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '='  shift, and go to state 64
    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 49 (arguments)
